variables:
  # Keeping this low helps jobs find an available runner without waiting.
  # @see https://git.drupalcode.org/project/gitlab_templates/-/blob/main/includes/include.drupalci.main.yml?ref_type=heads
  KUBERNETES_CPU_REQUEST: 2
  COMPOSER_NO_INTERACTION: 1

default:
  # New pushes can stop the current job and start a new one.
  interruptible: true
  image:
    name: 'drupalci/php-8.3-apache:production'
  retry:
    max: 2
    when:
      - unknown_failure
      - api_failure
      - stuck_or_timeout_failure
      - runner_system_failure
      - scheduler_failure

build project and run tests:
  stage: test
  variables:
    COMPOSER_MIRROR_PATH_REPOS: 1
    # We use the DDEV environment variable names for consistency, since DDEV is
    # the main development platform for Drupal CMS.
    # @see https://ddev.readthedocs.io/en/stable/users/extend/custom-commands/#environment-variables-provided
    DDEV_APPROOT: /var/www/html
    DDEV_DOCROOT: web
    DDEV_PRIMARY_URL: 'http://localhost/$DDEV_DOCROOT'
  script:
    # Add DDEV scripts, and vendor binaries, to PATH for readability.
    - export PATH=$CI_PROJECT_DIR/.ddev/commands/web:$DDEV_APPROOT/vendor/bin:$PATH
    # Add the components as globally available path repositories, simulating Packagist.
    - find $CI_PROJECT_DIR -type d -maxdepth 1 -name 'drupal_cms*' -exec composer config --global repositories.{} path {} ';'
    # Add the project template as a globally available path repository, simulating Packagist.
    - composer config --global repositories.template path $CI_PROJECT_DIR/project_template
    # Create the project.
    - composer create-project drupal/drupal-cms-project $DDEV_APPROOT --stability dev
    - cd $DDEV_APPROOT
    # Install Drupal CMS into a SQLite database, which is the only kind of database
    # supported by the in-browser trial.
    - drush site:install --yes --db-url sqlite://localhost/db.sqlite
    # If sendmail is unavailable, ensure that we have a valid mail backend configured.
    - which sendmail || drush config:set --yes system.mail interface.default test_mail_collector
    # Start the web server.
    - chown -R www-data:www-data $DDEV_DOCROOT
    - service apache2 start
    # Run tests.
    - ln -s -f $CI_PROJECT_DIR/tests
    - run-tests
  after_script:
    - cp -R /var/www/html $CI_PROJECT_DIR
    - rm -r -f html/.ddev html/tests
  artifacts:
    paths:
      - html
